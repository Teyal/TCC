from ket.lib import pauli_prepare, within, ctrl_int
from math import sqrt, pi

def oracle(x, y):
    """f(x) = 1 if x == 3 else 0

    U|x⟩|y⟩ = |x⟩|f(x) ⨁ y⟩
    """
    ctrl_int(x, 3, X, y) 

def grover(size, oracle):
    """Grover's search algorithm"""

    s = quant(size)
    h(s)

    """aux = quant(1)
    pauli_prepare(x, aux, -1)

    steps = int((pi/4)*sqrt(2**size))
    for _ in range(steps):
        oracle(s, aux)
        within(lambda : [h(s), x(s)],
               lambda : ctrl(s[1:], z, s[0]))"""


    return s
    
if __name__ == '__main__':
    size = 12
    print(size+1, 'Qubits used')

    t = grover(size, oracle)
    result = dump(t)
    print('Exprexted result = 3, measured:', result.show())

